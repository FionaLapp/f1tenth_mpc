<?xml version="1.0"?>
<launch>
  <!-- Listen to messages from joysicks -->
<!--
  <node pkg="joy" name="joy_node" type="joy_node"/>
-->

  <!-- Launch a map from the maps folder-->
  <arg name="map" default="$(find f1tenth_mpc)/src/maps/Empty/Empty_map.yaml"/>
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map)"/>

  <!-- Launch the racecar model -->
  <include file="$(find f1tenth_simulator)/launch/racecar_model.launch"/>

  <!-- Begin the simulator with the parameters from params.yaml -->
  <node pkg="f1tenth_simulator" name="f1tenth_simulator" type="simulator" output="screen">
    <rosparam command="load" file="$(find f1tenth_simulator)/params.yaml"/>
  </node>

  <!-- Launch the mux node with the parameters from params.yaml -->
  <node pkg="f1tenth_simulator" name="mux_controller" type="mux" output="screen">
    <rosparam command="load" file="$(find f1tenth_simulator)/params.yaml"/>
  </node>

  <!-- Launch the behavior controller node with the parameters from params.yaml -->
  <node pkg="f1tenth_simulator" name="behavior_controller" type="behavior_controller" output="screen">
    <rosparam command="load" file="$(find f1tenth_simulator)/params.yaml"/>
  </node>

  <!-- Launch the Random Walker Node -->
<!--
  <node pkg="f1tenth_simulator" name="random_walker" type="random_walk" output="screen">
    <rosparam command="load" file="$(find f1tenth_simulator)/params.yaml"/>
  </node>
-->

  <!-- Launch the Keyboard Node -->
  <node pkg="f1tenth_simulator" name="keyboard" type="keyboard" output="screen">
    <rosparam command="load" file="$(find f1tenth_simulator)/params.yaml"/>
  </node>

  <!-- ***Put launch command for new planner here:-->
  <!-- Launch the New Planner Node 
  <node        name           = "base_laser_link"
               pkg            = "tf"
               type           = "static_transform_publisher"
               args           = "0.2 0.0 0.1 0.0 0.0 0.0 base_link laser 20"/>


  <node        pkg            = "amcl"
               type           = "amcl"
               name           = "amcl"
               output         = "screen">
  <rosparam    file           = "$(find f1tenth_mpc)/src/amcl_params.yml"
               command        = "load"/>
  <param       name           = "initial_pose_x"
               value          = "0.0"/>
  <param       name           = "initial_pose_y"
               value          = "0.0"/>
  <param       name           = "initial_pose_a"
               value          = "0.0"/> </node>-->
	
  <node pkg="f1tenth_mpc" name="mpc" type="mpc.py" output="screen">
          <rosparam command="load" file="$(find f1tenth_simulator)/params.yaml"/>
  	 </node> 
<!-- Launch path node    -->
<node pkg="f1tenth_mpc" name="path_node" type="path_node.py">
          <rosparam command="load" file="$(find f1tenth_simulator)/params.yaml"/>
          
          <rosparam command="load" file="$(find f1tenth_mpc)/src/custom_params.yaml"/>
  	 </node> 
  
  	 
 <!-- Launch initialpose node -->
 <!--
<node pkg="f1tenth_mpc" name="initial_pose_node" type="initial_pose_node.py" output="screen">
          <rosparam command="load" file="$(find f1tenth_mpc)/src/custom_params.yaml"/>
  	 </node> 
  	 -->

  <!-- Launch RVIZ -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find f1tenth_mpc)/src/launch/simulator.rviz" output="screen"/>
   
    <!-- Launch Hector Slam -->
    
    <node pkg="hector_trajectory_server" type="hector_trajectory_server" name="trajectory_server">
          <rosparam command="load" file="$(find f1tenth_simulator)/params.yaml"/>
   	<rosparam command="load" file="$(find f1tenth_mpc)/src/custom_params.yaml"/>
  	 </node> 
  	 
     <!--
  	<node pkg="hector_mapping" type="hector_mapping" name="mapping">
          <rosparam command="load" file="$(find f1tenth_simulator)/params.yaml"/>
   	<rosparam command="load" file="$(find f1tenth_mpc)/src/custom_params.yaml"/>
  	 </node>
  -->
  
  
</launch>
