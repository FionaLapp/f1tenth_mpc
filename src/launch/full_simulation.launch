<?xml version="1.0"?>
<launch>
  
  <arg name="world_name" default= "IMS"/>
  <arg name="x_start" default="0.0"/>
  <arg name="y_start" default="0.0"/>
  <arg name="node_type" default="ftg"/>
  <arg name="n_horizon" default="5"/>
  <arg name="r_v" default="1"/>
  <arg name="r_delta" default="1"/>
  <arg name="velocity" default="5"/>
  <arg name="include_obstacles" default="false"/>
  <!--this is for Sochi: start angle -2.054 rad-->
  <arg name="z_start" if="$(eval arg('world_name')=='Sochi')" value="-0.856"/>
  <arg name="w_start" if="$(eval arg('world_name')=='Sochi')" value="0.517"/>
  <!--this is for IMS: start angle -1.570 rad-->
  <arg name="z_start" if="$(eval arg('world_name')=='IMS')" value="-0.707"/>
  <arg name="w_start" if="$(eval arg('world_name')=='IMS')" value="0.707"/>
  
   <!--this is for Austin: start angle -0.647 rad-->
  <arg name="z_start" if="$(eval arg('world_name')=='Austin')" value="0.318"/>
  <arg name="w_start" if="$(eval arg('world_name')=='Austin')" value="-0.948"/>
  <!--this is for Nuerburgring: start angle -2.376 rad-->
  <arg name="z_start" if="$(eval arg('world_name')=='Nuerburgring')" value="0.928"/>
  <arg name="w_start" if="$(eval arg('world_name')=='Nuerburgring')" value="-0.373"/>
  
  <!-- Launch a map from the maps folder-->
  <arg name="map" default="$(find f1tenth_mpc)/src/maps/$(arg world_name)/$(arg world_name)_map.yaml"/>
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map)"/>

  <node pkg="rostopic" type="rostopic" name="start" args="pub initialpose geometry_msgs/PoseWithCovarianceStamped '
       {
               header: {
                       frame_id: map
               }, 
               pose: {
                       pose: {
                               position: {
                                       x: $(arg x_start),
                                       y: $(arg y_start),
                                       z: 0.0}, 
                               orientation: {
                                       x: 0.0,
                                       y: 0.0,
                                       z: $(arg z_start),
                                       w: $(arg w_start)}
                       }
               }
       }'" /> 
  <!-- include obstacles-->

  <include file="$(find f1tenth_mpc)/src/launch/obstacles.launch"  pass_all_args="true" if="$(arg include_obstacles)"/>

   
  <!-- Begin the simulator with the parameters from params.yaml -->
  <node pkg="f1tenth_simulator" name="f1tenth_simulator" type="simulator" output="screen">
    <rosparam command="load" file="$(find f1tenth_mpc)/src/custom_params.yaml"/>
    
  </node>

  <!-- Launch the mux node with the parameters from params.yaml -->
  <node pkg="f1tenth_simulator" name="mux_controller" type="mux" output="screen">
    <rosparam command="load" file="$(find f1tenth_mpc)/src/custom_params.yaml"/>
  	    </node>

  <!-- Launch the behavior controller node with the parameters from params.yaml -->
  <node pkg="f1tenth_simulator" name="behavior_controller" type="behavior_controller" output="screen">
   <rosparam command="load" file="$(find f1tenth_mpc)/src/custom_params.yaml"/>
  	    </node>

  <!-- Launch the Keyboard Node -->
  <node pkg="f1tenth_simulator" name="keyboard" type="keyboard" output="screen">
   <rosparam command="load" file="$(find f1tenth_mpc)/src/custom_params.yaml"/>
  	    </node>

  <!-- Launch the racecar model -->
  <include file="$(find f1tenth_mpc)/src/launch/racecar_model.launch"/>

  <include file="$(find f1tenth_mpc)/src/launch/mpc_$(arg node_type).launch"
  pass_all_args="true"/>  

  <!-- Launch RVIZ -->
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find f1tenth_mpc)/src/launch/simulator.rviz" output="screen"/>
   
  
    
  	 
</launch>
